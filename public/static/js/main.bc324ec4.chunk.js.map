{"version":3,"sources":["context/AppReducer.jsx","context/GlobalState.jsx","components/AddTransaction.jsx","utils/format.js","components/Balance.jsx","components/Header.jsx","components/IncomeExpenses.jsx","components/Transaction.jsx","components/TransactionList.jsx","App.js","index.js"],"names":["state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","data","response","id","delete","config","headers","post","Provider","value","getTransactions","deleteTransaction","addTransaction","AddTransaction","useState","text","setText","amount","setAmount","useContext","onSubmit","e","preventDefault","newTransaction","Math","floor","random","className","htmlFor","onChange","target","placeholder","numberWithCommas","x","toString","replace","Balance","total","map","reduce","acc","item","toFixed","Header","IncomeExpenses","amounts","income","expense","Transaction","sign","abs","onClick","TransactionList","useEffect","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc324ec4.chunk.js","sourcesContent":["export default (state, action) => {\n  switch(action.type) {\n    case 'GET_TRANSACTIONS':\n      return {\n        ...state,\n        loading: false,\n        transactions: action.payload\n      }\n    case 'DELETE_TRANSACTION':\n      return {\n        ...state,\n        transactions: state.transactions\n          .filter(transaction => transaction._id !== action.payload) \n      }\n    case'ADD_TRANSACTION':\n      return {\n        ...state,\n        transactions: [...state.transactions, action.payload]\n      }\n    case'TRANSACTION_ERROR':\n      return {\n        ...state,\n        error: action.payload\n      }\n    default:\n      return state;\n  }\n}","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\n// inital state with test data\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n}\n\n// create context\nexport const GlobalContext = createContext(initialState);\n\n// provider component\nexport const GlobalProvider  = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/api/v1/transactions');\n\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/v1/transactions/${id}`);\n\n      dispatch({\n        type: 'DELETE_TRANSACTION',\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    try {\n      const res = await axios.post('/api/v1/transactions', transaction, config);\n\n      dispatch({\n        type: 'ADD_TRANSACTION',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  return(\n  <GlobalContext.Provider value={{\n    transactions: state.transactions,\n    error: state.error,\n    loading: state.loading,\n    getTransactions,\n    deleteTransaction,\n    addTransaction\n  }}>\n    {children}\n  </GlobalContext.Provider>\n  )\n}","import React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const AddTransaction = () => {\n  const [text, setText] = useState('');\n  const [amount, setAmount] = useState(0);\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const newTransaction = {\n      id: Math.floor(Math.random() + 100000000),\n      text,\n      amount: +amount\n    }\n\n    addTransaction(newTransaction);\n  }\n\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input \n            type=\"text\" \n            value={text} \n            onChange={(e) => setText(e.target.value)} \n            placeholder=\"Enter text...\" \n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\"\n            >Amount <br />\n            (negative - expense, positive - income)</label\n          >\n          <input type=\"number\"\n            value={amount} \n            onChange={(e) => setAmount(e.target.value)} \n            placeholder=\"Enter amount...\" \n          />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </>\n  )\n}\n","export function numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState';\nimport { numberWithCommas } from '../utils/format';\n\nexport const Balance = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n  return (\n    <>\n      <h4>Your Balance</h4>\n      <h1>${numberWithCommas(total)}</h1>\n    </>\n  )\n}\n","import React from 'react'\n\nexport const Header = () => {\n  return (\n    <h2>\n      Expense Tracker\n    </h2>\n  )\n}\n","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState';\nimport { numberWithCommas } from '../utils/format';\n\nexport const IncomeExpenses = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const income = amounts\n    .filter(item => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts\n      .filter(item => item < 0)\n      .reduce((acc, item) => (acc += item), 0) * -1\n  ).toFixed(2);\n\n  return (\n    <div className=\"inc-exp-container\">\n      <div>\n        <h4>Income</h4>\n        <p className=\"money plus\">${numberWithCommas(income)}</p>\n      </div>\n      <div>\n        <h4>Expense</h4>\n        <p className=\"money minus\">${numberWithCommas(expense)}</p>\n      </div>\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState';\nimport { numberWithCommas } from '../utils/format';\n\nexport const Transaction = ({ transaction }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n\n  const sign = transaction.amount < 0 ? '-' : '+';\n\n  return (\n    <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\n      {transaction.text} \n      <span>\n        {sign}${numberWithCommas(Math.abs(transaction.amount))}\n      </span>\n      <button\n        className=\"delete-btn\"\n        onClick={() => deleteTransaction(transaction._id)}\n      >x</button>\n    </li>\n  )\n}\n","import React, { useContext, useEffect } from 'react';\nimport { Transaction } from './Transaction';\n\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const TransactionList = () => {\n  const { transactions, getTransactions } = useContext(GlobalContext);\n\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n    <h3>History</h3>\n    <ul className=\"list\">\n      {transactions.map(transaction => (\n        <Transaction \n          key={transaction.id}\n          transaction={transaction}\n        />\n      ))}\n    </ul>  \n    </>\n  )\n}\n","import './App.css';\nimport { AddTransaction } from './components/AddTransaction';\nimport { Balance } from './components/Balance';\nimport { Header } from './components/Header';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { GlobalProvider } from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n        <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}